apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red-deployment-test
  namespace: home-assistant
  labels:
    app: node-red
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-red-test
  template:
    metadata:
      labels:
        app: node-red-test
    spec:
      priorityClassName: ignore-me
      initContainers:
        - name: data-permission-fix
          image: busybox
          command: ["/bin/chmod","-R","777", "/data"]
          volumeMounts:
            - name:  persistence
              mountPath: /data/
      containers:
        - name: node-red-test
          image: nodered/node-red:2.2.3
          env:
            - name: TZ
              value: Europe/Berlin
          ports:
            - containerPort: 1880
          livenessProbe:
            httpGet:
              path: /
              port: 1880
            initialDelaySeconds: 60
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: 1880
            initialDelaySeconds: 20
            periodSeconds: 2
          resources:
            requests:
              memory: 75Mi
            limits:
              memory: 150Mi #increase to allow installation of additional nodes (out of memory otherwise)
          volumeMounts:
            - name: persistence
              mountPath: /data/
            - mountPath: /data/settings.js
              name: node-red-settings-js
              subPath: settings.js
            - mountPath: /etc/localtime
              name: tz-europe
      volumes:
        - name: node-red-settings-js
          configMap:
            defaultMode: 420
            name: node-red-settings-js-map
        - name: persistence
          persistentVolumeClaim:
            claimName: nas-persitant-volume-claim-node-red-test
        - name: tz-europe
          hostPath:
            path: /usr/share/zoneinfo/Europe/Berlin
---
kind: Service
apiVersion: v1
metadata:
  name: node-red-service-test
  namespace: home-assistant
spec:
  selector:
    app: node-red-test
  ports:
    - protocol: TCP
      port: 1880
      targetPort: 1880
      name: node-red-test
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: node-red-ingress-test
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: node-red-test.cluster
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: node-red-service-test
                port:
                  number: 1880
