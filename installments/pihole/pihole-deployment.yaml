apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deployment
  namespace: home-assistant
  labels:
    app: pihole
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
    spec:
      hostNetwork: true
      priorityClassName: essential
      nodeSelector:
        kubernetes.io/hostname: pi-worker-1
      containers:
        - name: pihole
          image: pihole/pihole:4.3.2-1
          resources:
            requests:
              memory: 75Mi
            limits:
              memory: 100Mi
          ports:
            - name: dns
              containerPort: 53
              hostPort: 53
            - name: admin
              containerPort: 16349
          envFrom:
            - configMapRef:
                name: pihole-config-env
          volumeMounts:
            - name: persistence
              mountPath: /etc/pihole
            - mountPath: /etc/dnsmasq.d/02-custom.conf
              name: pihole-config
              subPath: 02-custom.conf
            - mountPath: /etc/pihole/whitelist.txt
              name: pihole-config
              subPath: whitelist.txt
            - name: pihole-config
              subPath: adlists.list
              mountPath: /etc/pihole/adlists.list
          livenessProbe:
            httpGet:
              path: /admin/index.php
              port: 16349
            initialDelaySeconds: 300
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /admin/index.php
              port: 16349
            initialDelaySeconds: 300
            periodSeconds: 2
      volumes:
        - name: config
        - configMap:
            defaultMode: 420
            name: pihole-configmap
          name: pihole-config
        - name: persistence
          persistentVolumeClaim:
            claimName: nas-persitant-volume-claim-pihole
  selector:
    matchLabels:
      app: pihole
      name: pihole
---
kind: Service
apiVersion: v1
metadata:
  name: pihole-service
  namespace: home-assistant
spec:
  selector:
    app: pihole
  ports:
    - protocol: TCP
      port: 80
      targetPort: admin
      name: pihole
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pihole-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: pihole.cluster
      http:
        paths:
          - path: /
            backend:
              serviceName: pihole-service
              servicePort: 80
